import tkinter as tk
from tkinter import messagebox
import random

WIDTH, HEIGHT = 600, 400
SNAKE_SIZE = 10
SNAKE_SPEED = 15

class SnakeGame(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Snake Game")
        self.canvas = tk.Canvas(self, width=WIDTH, height=HEIGHT, bg="black")
        self.canvas.pack()
        self.snake_pixels = []
        self.snake_length = 1
        self.target_x = round(random.randrange(0, WIDTH-SNAKE_SIZE) / 10.0) * 10.0
        self.target_y = round(random.randrange(0, HEIGHT-SNAKE_SIZE) / 10.0) * 10.0
        self.x_speed = 0
        self.y_speed = 0
        self.last_direction = None
        self.create_buttons()
        self.run_game()

    def create_buttons(self):
        self.left_button = tk.Button(self, text="Left", command=self.go_left)
        self.left_button.pack(side="left")
        self.right_button = tk.Button(self, text="Right", command=self.go_right)
        self.right_button.pack(side="left")
        self.up_button = tk.Button(self, text="Up", command=self.go_up)
        self.up_button.pack(side="left")
        self.down_button = tk.Button(self, text="Down", command=self.go_down)
        self.down_button.pack(side="left")

    def go_left(self):
        if self.last_direction != "right":
            self.x_speed = -SNAKE_SIZE
            self.y_speed = 0
            self.last_direction = "left"

    def go_right(self):
        if self.last_direction != "left":
            self.x_speed = SNAKE_SIZE
            self.y_speed = 0
            self.last_direction = "right"

    def go_up(self):
        if self.last_direction != "down":
            self.x_speed = 0
            self.y_speed = -SNAKE_SIZE
            self.last_direction = "up"

    def go_down(self):
        if self.last_direction != "up":
            self.x_speed = 0
            self.y_speed = SNAKE_SIZE
            self.last_direction = "down"

    def draw_snake(self):
        for pixel in self.snake_pixels:
            x, y = pixel
            self.canvas.create_rectangle(x, y, x + SNAKE_SIZE, y + SNAKE_SIZE, fill="white")

    def print_score(self):
        self.canvas.create_text(10, 10, text="Score: " + str(self.snake_length - 1), fill="orange", anchor="nw")

    def run_game(self):
        x, y = WIDTH / 2, HEIGHT / 2
        while True:
            x += self.x_speed
            y += self.y_speed

            if x >= WIDTH or x < 0 or y >= HEIGHT or y < 0:
                messagebox.showinfo("Game Over", "Game Over!")
                self.destroy()
                break

            self.canvas.delete("snake", "target")
            self.canvas.create_rectangle(self.target_x, self.target_y, self.target_x + SNAKE_SIZE, self.target_y + SNAKE_SIZE, fill="orange", tags="target")

            self.snake_pixels.append((x, y))

            if len(self.snake_pixels) > self.snake_length:
                del self.snake_pixels[0]

            for pixel in self.snake_pixels[:-1]:
                if pixel == (x, y):
                    messagebox.showinfo("Game Over", "Game Over!")
                    self.destroy()
                    break

            self.draw_snake()
            self.print_score()

            if x == self.target_x and y == self.target_y:
                self.target_x = round(random.randrange(0, WIDTH-SNAKE_SIZE)/10.0) * 10.0
                self.target_y = round(random.randrange(0, HEIGHT-SNAKE_SIZE)/10.0) * 10.0
                self.snake_length += 1

            self.update()
            self.after(1000 // SNAKE_SPEED)

if __name__ == "__main__":
    SnakeGame().mainloop()
